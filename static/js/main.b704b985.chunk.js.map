{"version":3,"sources":["App.js","components/Footer.js","serviceWorker.js","index.js"],"names":["dis","Footer","props","className","location","social","about","buttom","React","Component","options","App","state","page","storeItems","currentItem","category","productNumber","productName","productPrice","ImageURL","map","list","index","target","href","onClick","setState","renderTableData","value","_currentItem","name","price","Number","URL","defaultOption","onChange","item","updateCategory","placeholder","type","event","updateProductName","updateProductPrice","updateProductNumber","ProductNumber","updateImageURL","addToProductList","class","src","alt","_storeItems","push","availableProduct","addProduct","removeProduct","account","header","sideBar","mainBody","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b704b985.chunk.js","sourcesContent":["import React from 'react';\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport './App.css';\nimport Footer from './components/Footer';\n\nconst options = [\n  \"\",'Dresses','Shirts', 'Pants', 'Accessories'\n];\n\nlet dis;\n\nclass App extends React.Component {\n\n  state = {\n    page: 0,\n    storeItems: [],\n    currentItem : {\n      category : \"...\",\n      productNumber:\"\",\n      productName : \"\",\n      productPrice : \"\",\n      ImageURL: \"http://via.placeholder.com/200x200\"\n    },\n  }\n\n  constructor(props)\n  {\n    super(props)\n    dis = this;\n  }\n\n renderTableData() {\n    return dis.state.storeItems.map((list, index) => {\n       const { productNumber,productName, productPrice, category, ImageURL } = list //destructuring\n\n      //  dis.debugger(ImageURL);\n       return (\n\n          <tr>\n             <td>{productNumber}</td>\n             <td>{productName}</td>\n             <td>{productPrice}</td>\n             <td>{category}</td>\n             <td><a target=\"new\" href={ImageURL}>View</a></td>\n          </tr>\n       )\n    })\n }\n\n  header() \n  {\n    return <div className=\"App-header\">\n        <h1>SorinaSonia Store</h1>\n    </div>\n  }\n\n sideBar()\n  {\n    return <div className=\"App-side-bar\">\n      <button onClick={()=> dis.setState({page:0})} className=\"App-avialable-product\">Show All Product</button>\n      <button onClick={()=> dis.setState({page:1})} className=\"App-add-product\">Add Product</button>\n      <button onClick={()=> dis.setState({page:2})} className=\"App-remove-product\">Remove Product</button>\n      <button onClick={()=> dis.setState({page:3})} className=\"App-account\">Account</button>\n  </div>\n  }\n\n availableProduct() \n {\n   return <div>\n    <h1 className='title'>Store</h1>\n    <table className='list'>\n        <tbody>\n          <tr>\n          <th>No.</th>\n          <th>Product Name</th>\n          <th>Price</th>\n          <th>Category</th>\n          <th>Image</th>\n          </tr>\n          {dis.renderTableData()}\n        </tbody>\n    </table>\n  </div>\n\n }\n\n//  debugger(logTxt)\n//  {\n//    console.log(\"HERE IS THE LOG \", logTxt);\n//  }\n\n \n updateCategory(value)\n {\n   let _currentItem = dis.state.currentItem;\n   _currentItem.category = value;\n  dis.setState({currentItem:_currentItem})\n }\n\n updateProductName(name)\n{\n  let _currentItem = dis.state.currentItem;\n   _currentItem.productName = name;\n  dis.setState({currentItem:_currentItem})\n  // dis.debugger(name);\n}\n\nupdateProductPrice(price)\n{\n  let _currentItem = dis.state.currentItem;\n   _currentItem.productPrice = price;\n  dis.setState({currentItem:_currentItem})\n}\n\nupdateProductNumber(Number)\n{\n  let _currentItem = dis.state.currentItem;\n   _currentItem.productNumber = Number;\n   dis.setState({currentItem:_currentItem})\n  //  dis.debugger(Number);\n}\n\nupdateImageURL(URL)\n{\n  let _currentItem = dis.state.currentItem;\n   _currentItem.ImageURL = URL;\n  dis.setState({currentItem:_currentItem})\n}\n\n addProduct()\n {\n  let defaultOption = options[0];\n   return <div className=\"add-product-view\">\n     \n            <div className=\"main\">\n               <h1 className=\"h11\">Add A New Item</h1>\n                <form className=\"form\">\n                  <label>Categories</label>\n                  <Dropdown onChange={(item)=> dis.updateCategory(item.value) } className=\"drop-down\" options={options} value={defaultOption} placeholder={dis.state.currentItem.category} />\n                    <label>Product Name</label>\n                    <input type=\"text\" onChange={(event)=> dis.updateProductName(event.target.value)} value={dis.state.currentItem.productName} />\n                    <label>Product Price</label>\n                    <input type=\"number\" onChange={(event)=> dis.updateProductPrice(event.target.value)} value={dis.state.currentItem.productPrice}/>\n                    <label>Product Number</label>\n                    <input type=\"number\" onChange={(event)=> dis.updateProductNumber(event.target.value)} value={dis.state.currentItem.ProductNumber}/>\n                    <label>Image URL</label>\n                    <input type=\"text\" onChange={(event)=> dis.updateImageURL(event.target.value)} value={dis.state.currentItem.ImageURL}/>\n                </form>\n                <button onClick={()=> dis.addToProductList()} className=\"btn\">Add Product</button>\n                \n            </div>\n            \n            <div className =\"preview\">\n              <h1 className=\"h11\">Preview</h1>\n                <div className =\"picture\">\n                  <p class=\"Categories\">Product: {dis.state.currentItem.category} </p>\n                  <p class=\"name\">Name: {dis.state.currentItem.productName}</p>\n                  <img src={dis.state.currentItem.ImageURL} alt=\"demo pic\" />\n                  <div className=\"no-p\">\n                  <p className=\"no\"> No: {dis.state.currentItem.productNumber} </p>\n                  <p className=\"price\">Price: {dis.state.currentItem.productPrice}</p>\n                  </div>\n                </div>\n            </div>\n   </div>\n }\n\n addToProductList()\n {\n\n  let clearCurrentItem = {\n    category : \"...\",\n    productName : \"\",\n    productNumber:\"\",\n    productPrice : \"\",\n    ImageURL: \"http://via.placeholder.com/200x200\"\n  }\n \n  let _storeItems = dis.state.storeItems;\n  _storeItems.push(dis.state.currentItem);\n\n  dis.setState({storeItems : _storeItems, currentItem : clearCurrentItem});\n\n  // dis.debugger(dis.state.storeItems);\n\n }\n\n removeProduct()\n {\n   return <div>\n     <h1>REMOVE PRODUCT</h1>\n   </div>\n }\n\n account()\n {\n   return <div>\n    \n      <h1>MONEY MACHINE</h1>\n\n       \n    </div>\n    \n }\n\n mainBody()\n {\n   return <div className =\"App-main\">\n      {\n    \n        dis.state.page === 0 ? <dis.availableProduct/> : dis.state.page === 1 ? <dis.addProduct/> : dis.state.page === 2 ? <dis.removeProduct/> : <dis.account/>\n      }\n    </div>\n }\n\n \n  render() {\n    return (\n      <div className=\"App\">\n        <this.header/>\n\n          <div className=\"App-body\">\n            <this.sideBar/>\n            <this.mainBody/>\n          </div>\n          <Footer/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","import React from \"react\"\nimport \"./Footer.css\";\nimport { FaFacebookF, FaTwitter, FaGooglePlusG, FaLinkedinIn , FaSlack} from \"react-icons/fa\";\n\nclass Footer extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    \n\n\n    location() {\n        return <div className=\"location\">\n            <h1>LOCATION</h1>\n            <p>1562, Sanusi Fafunwa,</p>\n            <p> Victoria Island, Lagos.</p>\n            <p>Some Where In Nigeria.</p>\n        </div>\n    }\n\n\n    social(){\n        return <div className=\"social\">\n            <h1>AROUND THE WEB</h1>\n            <div className=\"icons\">\n                <p className=\"face\"> <FaFacebookF/> </p>\n                <p className=\"google\"> <FaGooglePlusG/></p>\n                <p className=\"twit\"><FaTwitter/></p>\n                <p className=\"linked\"> <FaLinkedinIn/></p>\n                <p className=\"slack\"> <FaSlack/></p>\n                \n               \n            </div>\n        </div>\n    }\n\n    about(){\n        return<div className=\"about\">\n            <h1>ABOUT US</h1>\n            <p>SorinaSonia inventory store allows user to manage\n            products, while providing comprehensive\n            chart workflow for management without excluding\n            the pictures of product for comfirmation.</p>\n        </div>\n    }\n\n    buttom() {\n        return<div className=\"buttom\">\n            <h2>Copyright &copy; Inventory 2020 </h2>\n        </div>\n    }\n    \n    render(){\n        return(\n            <div className=\"footer\">\n                <div className=\"all\">\n                    <this.location/>\n                    <this.social/>\n                    <this.about/>\n\n                </div>\n                <this.buttom/>\n            </div>\n        )\n    };\n}\n\n\n\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Head from '../src/components/Head';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Head/> */}  \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}